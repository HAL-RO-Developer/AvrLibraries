/* -------------------------------------------------------------------------- */
/* avr.h																	  */
/* CL21																		  */
/*																			  */
/* -------------------------------------------------------------------------- */
/* 番号		更新履歴							日付		氏名			  */
/* -------------------------------------------------------------------------- */
/* 000000	新規作成							2016/06/28	田中 翔吾		  */
/* -------------------------------------------------------------------------- */
#ifndef		AVR_LIBRARY_H_
#define		AVR_LIBRARY_H_

#ifndef		F_CPU
#define		F_CPU 8000000UL						/* 8MHz発振					  */
#endif

/* -------------------------------------------------------------------------- */
/* includeファイル	    												  	  */
/* -------------------------------------------------------------------------- */
#include <avr/io.h>								/* AVR入出力				  */
#include <util/delay.h>							/* ディレイ関数				  */
#include <avr/interrupt.h>						/* 割込みヘッダ				  */

/* -------------------------------------------------------------------------- */
/* typedef定義																  */
/* -------------------------------------------------------------------------- */
#ifndef _TYPEDEF
#define _TYPEDEF
typedef 		 char	SCHR;					/* char型					  */
typedef unsigned char	UCHR;					/* unsigned char型			  */
typedef 		 short	SSHT;					/* short型					  */
typedef unsigned short	USHT;					/* unsigned short型			  */
typedef 		 long	SLNG;					/* long型					  */
typedef unsigned long	ULNG;					/* unsigned long型			  */
typedef 		 int	SINT;					/* int型					  */
typedef unsigned int	UINT;					/* unsigned int型			  */
#endif

/* -------------------------------------------------------------------------- */
/* マクロ定義			    												  */
/* -------------------------------------------------------------------------- */
#define High(reg,bitno)	( reg |=  ( 1 << bitno ) )	/* Px_nにHighを設定		  */
#define Low(reg,bitno)	( reg &= ~( 1 << bitno ) )	/* Px_nにLowを設定		  */
#define Rev(reg,bitno)	( reg ^=  ( 1 << bitno ) )	/* Px_nを反転			  */

/* -------------------------------------------------------------------------- */
/* 定数定義			      												      */
/* -------------------------------------------------------------------------- */
#define HIGH			(    1 )				/* Hレベル					  */
#define LOW				(    0 )				/* Lレベル					  */
#define SWT_OFF			( HIGH )				/* スイッチOFF状態			  */
#define SWT_ON			(  LOW )				/* スイッチON状態			  */

/* サーボモータ関連定数 ----------------------------------------------------- */
#define SRVO_CYCLE		( 20000 )				/* PWM周期(μs)				  */
#define SRVO_MIN		(   360 )				/* 回転最小(右位置)			  */
#define SRVO_MAX		(  1980 )				/* 回転最大(左位置)			  */
#define SRVO_RIGHT		(     0 )				/* 右位置					  */
#define SRVO_CENTER		(    90 )				/* 中心位置					  */
#define SRVO_LEFT		(   180 )				/* 左位置					  */

/* A/D変換関係定数 ---------------------------------------------------------- */
#define ADC_MSK			( 0x03FF )				/* A/D変換結果用マスク(10Bit) */

/* 割込み関連定数 ----------------------------------------------------------- */
enum INTERRUPT{									/* 割込み操作				  */
	INT_SET,									/* 設定						  */
	INT_START,									/* 開始						  */
	INT_STOP									/* 停止						  */
};

/* -------------------------------------------------------------------------- */
/* プロトタイプ宣言															  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		: delay_ms													  */
/* 機能名		: ディレイ(ms)												  */
/* 機能概要		: 引数で渡された時間(ms)待機する							  */
/* 引数			: SINT			: ms		: 待機時間(ms)					  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/06/14	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void delay_ms( SINT ms );

/* -------------------------------------------------------------------------- */
/* 関数名		: delay_us													  */
/* 機能名		: ディレイ(μs)												  */
/* 機能概要		: 引数で渡された時間(μs)待機する							  */
/* 引数			: SINT			: ms		: 待機時間(μs)					  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/06/14	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void delay_us( SINT us );

/* -------------------------------------------------------------------------- */
/* 関数名		: GetRegState												  */
/* 機能名		: レジスタ状態取得											  */
/* 機能概要		: レジスタの任意ビットの状態を取得する			 			  */
/* 引数			: volatile	UCHR	: reg		: レジスタ					  */
/*				: 			UCHR	: bitno		: ビット番号				  */
/* 戻り値		: 			UCHR	: LOW		: 0(Low)					  */
/* 				: 			UCHR	: HIGH		: 1(High)					  */
/* 作成日		: 2016/06/29	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
UCHR GetRegState( volatile UCHR reg, UCHR bitno );

/* -------------------------------------------------------------------------- */
/* 関数名		: MoveServo													  */
/* 機能名		: サーボ動作												  */
/* 機能概要		: 引数で渡されたサーボを指定角度に回転させる	 			  */
/* 引数			: volatile	UCHR*	: portx		: ポート出力レジスタ(PORTx)	  */
/*				: 			UCHR	: bitno		: ビット番号				  */
/*				: 			SINT	: angle		: 角度						  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/06/15	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void MoveServo( volatile UCHR* portx, UCHR bitno, SINT angle );

/* A/D変換関連関数 ---------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/* 関数名		: SetADC													  */
/* 機能名		: A/D変換設定												  */
/* 機能概要		: A/D変換の設定を行う										  */
/* 引数			: volatile	UCHR*	: ddrx		: ポート方向レジスタ(DDRx)	  */
/* 				: volatile	UCHR*	: pinx		: ポート入力レジスタ(PINx)	  */
/* 				: 			UCHR	: bitno		: ビット番号				  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/06/29	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void SetADC( volatile UCHR* ddrx, volatile UCHR* pinx, UCHR bitno );

/* -------------------------------------------------------------------------- */
/* 関数名		: GetADC													  */
/* 機能名		: A/D変換値取得												  */
/* 機能概要		: A/D変換し、結果を返す。									  */
/* 引数			: なし														  */
/* 戻り値		: USHT			: sValue	: A/D変換値						  */
/* 作成日		: 2016/06/29	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
USHT GetADC( void );

/* 割込み関連関数 ----------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/* 関数名		: Interrupt													  */
/* 機能名		: タイマ割り込み操作										  */
/* 機能概要		: タイマ割り込みの設定および開始・停止						  */
/* 引数			: enum INTERRUPT : op		: 操作(設定/開始/停止) 			  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/07/13	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void Interrupt( enum INTERRUPT op );

/* -------------------------------------------------------------------------- */
/* 関数名		: MoveServo													  */
/* 機能名		: サーボ動作												  */
/* 機能概要		: 引数で渡されたサーボを指定角度に回転させる	 			  */
/* 引数			: volatile	UCHR*	: portx		: ポート出力レジスタ(PORTx)	  */
/*				: 			UCHR	: bitno		: ビット番号				  */
/*				: 			SINT	: angle		: 角度						  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/06/15	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void Servo( volatile UCHR* portx, UCHR bitno, SINT angle );

#endif

/* -------------------------------------------------------------------------- */
/* 				Copyright HAL College of Technology & Design				  */
/* -------------------------------------------------------------------------- */
