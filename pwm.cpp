/* -------------------------------------------------------------------------- */
/* pwm.c																	  */
/* CL21																		  */
/*																			  */
/* -------------------------------------------------------------------------- */
/* 番号		更新履歴							日付		氏名			  */
/* -------------------------------------------------------------------------- */
/* 000000	新規作成							2016/09/07	田中 翔吾		  */
/* -------------------------------------------------------------------------- */
#include "pwm.h"

/* -------------------------------------------------------------------------- */
/* グローバル変数		    												  */
/* -------------------------------------------------------------------------- */
SINT	cycle	 = SRVO_CYCLE;					/* PWM周期(us)				  */
SINT	pulse	 = 0;							/* パルス幅(us)				  */

/* -------------------------------------------------------------------------- */
/* 関数名		: AttachServo												  */
/* 機能名		: サーボモータ設定											  */
/* 機能概要		: 															  */
/* 引数			: volatile	UCHR*	: ddrx		: ポート方向レジスタ(DDRx)	  */
/* 				: 			UCHR	: bitno		: ビット番号				  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/09/07	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void AttachServo( volatile UCHR* ddrx, UCHR bitno )
{
	High( *ddrx, bitno );
}

/* -------------------------------------------------------------------------- */
/* 関数名		: MoveServo												  */
/* 機能名		: サーボモータ動作											  */
/* 機能概要		: サーボモータを指定角に動かす								  */
/* 引数			: SINT			: degree		: 角度(°）					  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/09/07	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void MoveServo( SINT degree )
{
	
	/* 回転Duty比の算出 */
	pulse = SRVO_RATIO;							/* 1°あたりのパルス幅(us)	  */
	pulse = pulse * degree + SRVO_MIN;			/* 指定角度のパルス幅(us)	  */
	
	SetParamPWM( SRVO_CYCLE/100, pulse/100 );
	
	/* タイマ割込み設定 */
	SetTimerInterrupt( 0.1 );					/* 100usごとに割込み		  */
	
}

/* -------------------------------------------------------------------------- */
/* 関数名		: SetParamPWM												  */
/* 機能名		: PWMパラメータ設定											  */
/* 機能概要		: PWM周期とパルス幅(HIGHの時間)を設定する。					  */
/* 引数			: SINT			: cycle		: PWM周期(us)					  */
/* 				: SINT			: pulse		: パルス幅(us)					  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/09/07	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void SetParamPWM( SINT cycle_us, SINT pulse_us )
{
	cycle =	cycle_us;
	pulse = pulse_us;
}

/* -------------------------------------------------------------------------- */
/* 関数名		: PWM														  */
/* 機能名		: PWM処理													  */
/* 機能概要		: PWMのHIGH/LOWの切り替えを行う。							  */
/* 引数			: volatile	UCHR*	: portx		: ポート出力レジスタ(PORTx)	  */
/* 				: 			UCHR	: bitno		: ビット番号				  */
/* 戻り値		: なし														  */
/* 作成日		: 2016/09/07	田中 翔吾									  */
/* -------------------------------------------------------------------------- */
void PWM( volatile UCHR* portx, UCHR bitno )
{
	static int tcnt = 0;
	if( tcnt % cycle == 0 ){
		High( *portx, bitno );
		tcnt = 0;
	}else if( tcnt == pulse ){
		Low( *portx, bitno );	
	}
	tcnt++;
}

/* -------------------------------------------------------------------------- */
/* 				Copyright HAL College of Technology & Design				  */
/* -------------------------------------------------------------------------- */